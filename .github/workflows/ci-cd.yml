name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  YC_REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID}}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Yandex Cloud Container Registry
        run: |
          echo '${{ secrets.YC_SERVICE_ACCOUNT_KEY }}' > yc-key.json
          yc --no-user-output container registry configure-docker --service-account-key-file yc-key.json

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker tag weather_service-backend:latest $DOCKERHUB_USERNAME/weather-backend:${{ github.sha }}
          docker tag weather_service-frontend:latest $DOCKERHUB_USERNAME/weather-frontend:${{ github.sha }}
          docker tag weather_service-bot:latest $DOCKERHUB_USERNAME/weather-bot:${{ github.sha }}
          docker tag redis:7 $DOCKERHUB_USERNAME/redis:${{ github.sha }}
          docker tag prom/prometheus:latest $DOCKERHUB_USERNAME/prometheus:${{ github.sha }}
          docker tag grafana/grafana:latest $DOCKERHUB_USERNAME/grafana:${{ github.sha }}
          docker tag oliver006/redis_exporter:latest $DOCKERHUB_USERNAME/redis-exporter:${{ github.sha }}
          docker tag gcr.io/cadvisor/cadvisor:latest $DOCKERHUB_USERNAME/cadvisor:${{ github.sha }}

          docker push $DOCKERHUB_USERNAME/weather-backend:${{ github.sha }}
          docker push $DOCKERHUB_USERNAME/weather-frontend:${{ github.sha }}
          docker push $DOCKERHUB_USERNAME/weather-bot:${{ github.sha }}
          docker push $DOCKERHUB_USERNAME/redis:${{ github.sha }}
          docker push $DOCKERHUB_USERNAME/prometheus:${{ github.sha }}
          docker push $DOCKERHUB_USERNAME/grafana:${{ github.sha }}
          docker push $DOCKERHUB_USERNAME/redis-exporter:${{ github.sha }}
          docker push $DOCKERHUB_USERNAME/cadvisor:${{ github.sha }}

          docker tag weather_service-backend:latest cr.yandex/$YC_REGISTRY_ID/weather-backend:${{ github.sha }}
          docker tag weather_service-frontend:latest cr.yandex/$YC_REGISTRY_ID/weather-frontend:${{ github.sha }}
          docker tag weather_service-bot:latest cr.yandex/$YC_REGISTRY_ID/weather-bot:${{ github.sha }}
          docker tag redis:7 cr.yandex/$YC_REGISTRY_ID/redis:${{ github.sha }}
          docker tag prom/prometheus:latest cr.yandex/$YC_REGISTRY_ID/prometheus:${{ github.sha }}
          docker tag grafana/grafana:latest cr.yandex/$YC_REGISTRY_ID/grafana:${{ github.sha }}
          docker tag oliver006/redis_exporter:latest cr.yandex/$YC_REGISTRY_ID/redis-exporter:${{ github.sha }}
          docker tag gcr.io/cadvisor/cadvisor:latest cr.yandex/$YC_REGISTRY_ID/cadvisor:${{ github.sha }}

          docker push cr.yandex/$YC_REGISTRY_ID/weather-backend:${{ github.sha }}
          docker push cr.yandex/$YC_REGISTRY_ID/weather-frontend:${{ github.sha }}
          docker push cr.yandex/$YC_REGISTRY_ID/weather-bot:${{ github.sha }}
          docker push cr.yandex/$YC_REGISTRY_ID/redis:${{ github.sha }}
          docker push cr.yandex/$YC_REGISTRY_ID/prometheus:${{ github.sha }}
          docker push cr.yandex/$YC_REGISTRY_ID/grafana:${{ github.sha }}
          docker push cr.yandex/$YC_REGISTRY_ID/redis-exporter:${{ github.sha }}
          docker push cr.yandex/$YC_REGISTRY_ID/cadvisor:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -a
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Authenticate to Yandex Cloud
        run: |
          echo '${{ secrets.YC_SERVICE_ACCOUNT_KEY }}' > yc-key.json
          yc config set service-account-key yc-key.json

      - name: Deploy to Yandex Cloud
        run: |
          # Создание или обновление контейнеров
          yc serverless container create --name weather-backend || true
          yc serverless container create --name weather-frontend || true
          yc serverless container create --name weather-bot || true
          yc serverless container create --name redis || true
          yc serverless container create --name prometheus || true
          yc serverless container create --name grafana || true
          yc serverless container create --name redis-exporter || true
          yc serverless container create --name cadvisor || true

          # Получение ID контейнеров
          BACKEND_ID=$(yc serverless container get --name weather-backend --format json | jq -r '.id')
          FRONTEND_ID=$(yc serverless container get --name weather-frontend --format json | jq -r '.id')
          BOT_ID=$(yc serverless container get --name weather-bot --format json | jq -r '.id')
          REDIS_ID=$(yc serverless container get --name redis --format json | jq -r '.id')
          PROMETHEUS_ID=$(yc serverless container get --name prometheus --format json | jq -r '.id')
          GRAFANA_ID=$(yc serverless container get --name grafana --format json | jq -r '.id')
          REDIS_EXPORTER_ID=$(yc serverless container get --name redis-exporter --format json | jq -r '.id')
          CADVISOR_ID=$(yc serverless container get --name cadvisor --format json | jq -r '.id')

          # Деплой ревизий
          yc serverless container revision deploy \
            --container-id $BACKEND_ID \
            --image cr.yandex/$YC_REGISTRY_ID/weather-backend:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --environment OPENWEATHERMAP_API_KEY=${{ secrets.OPENWEATHERMAP_API_KEY }},REDIS_HOST=redis,REDIS_PORT=6379 \
            --concurrency 10

          yc serverless container revision deploy \
            --container-id $FRONTEND_ID \
            --image cr.yandex/$YC_REGISTRY_ID/weather-frontend:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --concurrency 10

          yc serverless container revision deploy \
            --container-id $BOT_ID \
            --image cr.yandex/$YC_REGISTRY_ID/weather-bot:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --environment TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }},BACKEND_URL=http://backend:8000,REDIS_HOST=redis,REDIS_PORT=6379 \
            --concurrency 10

          yc serverless container revision deploy \
            --container-id $REDIS_ID \
            --image cr.yandex/$YC_REGISTRY_ID/redis:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --environment REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD:-redis }} \
            --concurrency 10

          yc serverless container revision deploy \
            --container-id $PROMETHEUS_ID \
            --image cr.yandex/$YC_REGISTRY_ID/prometheus:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --concurrency 10

          yc serverless container revision deploy \
            --container-id $GRAFANA_ID \
            --image cr.yandex/$YC_REGISTRY_ID/grafana:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --concurrency 10

          yc serverless container revision deploy \
            --container-id $REDIS_EXPORTER_ID \
            --image cr.yandex/$YC_REGISTRY_ID/redis-exporter:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --environment REDIS_ADDR=redis:6379,REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD:-redis }} \
            --concurrency 10

          yc serverless container revision deploy \
            --container-id $CADVISOR_ID \
            --image cr.yandex/$YC_REGISTRY_ID/cadvisor:${{ github.sha }} \
            --service-account-id $(yc iam service-account get --name weather-service-account --format json | jq -r '.id') \
            --concurrency 10

          # Разрешение публичного доступа (опционально)
          yc serverless container allow-unauthenticated-invoke --name weather-frontend
          yc serverless container allow-unauthenticated-invoke --name weather-backend