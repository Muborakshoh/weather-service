name: CI/CD Pipeline for Weather Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Проверка кода
      - name: Checkout code
        uses: actions/checkout@v3

      # Настройка Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Логин в Docker Hub с использованием токена
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Сборка и пуш фронтенда
      - name: Build and push frontend image
        run: |
          cd frontend
          docker build -t i20020309/weather-service-frontend:html-js-css .
          docker push i20020309/weather-service-frontend:html-js-css

      # Сборка и пуш бэкенда
      - name: Build and push backend image
        run: |
          cd backend
          docker build -t i20020309/weather-service-backend:updated-country .
          docker push i20020309/weather-service-backend:updated-country

      # Сборка и пуш бота
      - name: Build and push bot image
        run: |
          cd bot
          docker build -t i20020309/weather-service-bot:latest .
          docker push i20020309/weather-service-bot:latest

      # Деплой в Yandex Cloud
      - name: Deploy to Yandex Cloud
        env:
          YC_TOKEN: ${{ secrets.YC_TOKEN }}
          CLUSTER_ID: ${{ secrets.CLUSTER_ID }}
          ZONE: ${{ secrets.ZONE }}
        run: |
          # Установка yc CLI
          curl -L https://github.com/yandex-cloud/yc/releases/latest/download/yc-linux-amd64 > yc-linux-amd64
          chmod +x yc-linux-amd64
          sudo mv yc-linux-amd64 /usr/local/bin/yc
          yc init --token $YC_TOKEN --quiet

          # Получение credentials для kubectl
          yc managed-kubernetes cluster get-credentials --id $CLUSTER_ID --external --force

          # Применение манифестов
          kubectl apply -f k8s/